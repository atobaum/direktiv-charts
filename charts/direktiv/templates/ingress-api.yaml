{{ if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "direktiv.fullname" . }}-ingress-api
  labels:
    {{- include "direktiv.labels" . | nindent 4 }}
  annotations:
    nginx.ingress.kubernetes.io/service-upstream: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "{{ .Values.timeout }}"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "{{ .Values.timeout }}"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "{{ .Values.timeout }}"
    nginx.ingress.kubernetes.io/proxy-body-size: 34m
    {{- range $key, $value := .Values.ingress.additionalAnnotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- if ne .Values.ingress.certificate "none" }}
    ingress.kubernetes.io/force-ssl-redirect: "true"
    {{- end }}
    {{- if ne .Values.apikey "none" }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ( $http_direktiv_token != "{{ .Values.apikey }}" ) {
          return 401;
      }
    {{- end }}
spec:
  ingressClassName: {{ .Values.ingress.class }}
  {{- if ne .Values.ingress.certificate "none" }}
  tls:
  - hosts:
      - {{ .Values.ingress.host }}
    secretName: {{ .Values.ingress.certificate }}
  {{- end }}
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
        - path: /api/
          pathType: Prefix
          backend:
            service:
              name: {{ include "direktiv.fullname" . }}-api
              port:
                number: 1644
{{ end }}